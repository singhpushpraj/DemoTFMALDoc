### YamlMime:BusinessCentralApplicationObject
fqName: System.Visualization.Headlines
alId: ID 1439
namespace: System.Visualization
baseKind: Codeunit
kind: Codeunit
parent: N:Module::System_Application::Namespace::System.Visualization
langs:
- al
seeAlso:
- '[Codeunit](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-codeunit-object)'
objectProperties:
- name: Access
  value: Public
  promoted: false
- name: InherentEntitlements
  value: X
  promoted: false
- name: InherentPermissions
  value: X
  promoted: false
methods:
- syntax:
    content: 'procedure Truncate(TextToTruncate: Text, MaxLength: Integer): Text'
    parameters:
    - id: TextToTruncate
      description: Text that be shortened in order to fit on the headline.
      parameterType:
        name: Text
        isExternal: true
    - id: MaxLength
      description: >-
        The maximal length of the string. Usually obtained through

        <see cref="GetMaxQualifierLength"></see> or <see cref="GetMaxPayloadLength"></see> function.
      parameterType:
        name: Integer
        isExternal: true
    return:
      description: The truncated text
      returnType:
        name: Text
        isExternal: true
  summary: >-
    Truncate the text from the end for its length to be no more than MaxLength.

    If the text has to be shortened, "..." is be added at the end.
  name: Truncate
  uid: M:Codeunit::System#Visualization#Headlines.Truncate(Text,Integer):Text
- syntax:
    content: 'procedure Emphasize(TextToEmphasize: Text): Text'
    parameters:
    - id: TextToEmphasize
      description: The text that the style will be applied on.
      parameterType:
        name: Text
        isExternal: true
    return:
      description: Emphasized text (special tags are added to the input).
      returnType:
        name: Text
        isExternal: true
  summary: Emphasize a string of text in the headline. Applies the style to the text.
  name: Emphasize
  uid: M:Codeunit::System#Visualization#Headlines.Emphasize(Text):Text
- syntax:
    content: 'procedure GetHeadlineText(Qualifier: Text, Payload: Text, var ResultText: Text): Boolean'
    parameters:
    - id: Qualifier
      description: >-
        The text to be displayed on the qualifier (smaller text above the main one)

        of the headline (parts of it can be emphasized, see <see cref="Emphasize"></see>).
      parameterType:
        name: Text
        isExternal: true
    - id: Payload
      description: >-
        The text to be displayed on the payload (the main text of the headline)

        of the headline (parts of it can be emphasized, see <see cref="Emphasize"></see>).
      parameterType:
        name: Text
        isExternal: true
    - id: ResultText
      description: >-
        Output parameter. Contains the combined text, ready to be assigned to

        the Expression property, if the function returns 'true', the unchanged value otherwise.
      parameterType:
        name: Text
        isExternal: true
    return:
      description: >-
        'false' if payload is empty, or payload is too long, or qualifier is too long,

        'true' otherwise.
      returnType:
        name: Boolean
        isExternal: true
  summary: >-
    Combine the text from Qualifier and Payload in order to get a single string with headline

    text. This text is usually assigned to Expression property on the HeadlinePart page.
  name: GetHeadlineText
  uid: M:Codeunit::System#Visualization#Headlines.GetHeadlineText(Text,Text,Text@):Boolean
- syntax:
    content: 'procedure GetUserGreetingText(): Text'
    return:
      description: The greeting text.
      returnType:
        name: Text
        isExternal: true
  summary: >-
    Get a greeting text for the current user relevant to the time of the day.

    Timespans and correspondant greetings:

    00:00-10:59     Good morning, John Doe!

    11:00-13:59     Hi, John Doe!

    14:00-18:59     Good afternoon, John Doe!

    19:00-23:59     Good evening, John Doe!

    if the user name is blank for the current user, simplified version

    is used (for example, "Good afternoon!").
  name: GetUserGreetingText
  uid: M:Codeunit::System#Visualization#Headlines.GetUserGreetingText:Text
- syntax:
    content: 'procedure ShouldUserGreetingBeVisible(): Boolean'
    return:
      description: True if the user logged in less than 10 minutes ago, false otherwise.
      returnType:
        name: Boolean
        isExternal: true
  summary: Determines if a greeting text should be visible.
  name: ShouldUserGreetingBeVisible
  uid: M:Codeunit::System#Visualization#Headlines.ShouldUserGreetingBeVisible:Boolean
- syntax:
    content: 'procedure GetMaxQualifierLength(): Integer'
    return:
      description: The number of characters, 50.
      returnType:
        name: Integer
        isExternal: true
  summary: The accepted maximum length of a qualifier.
  name: GetMaxQualifierLength
  uid: M:Codeunit::System#Visualization#Headlines.GetMaxQualifierLength:Integer
- syntax:
    content: 'procedure GetMaxPayloadLength(): Integer'
    return:
      description: The number of characters, 75.
      returnType:
        name: Integer
        isExternal: true
  summary: The accepted maximum length of a payload.
  name: GetMaxPayloadLength
  uid: M:Codeunit::System#Visualization#Headlines.GetMaxPayloadLength:Integer
commentId: O:Codeunit::System#Visualization#Headlines
summary: >-
  Various functions related to headlines functionality.


  Payload - the main text of the headline.

  Qualifier - smaller text, hint to the payload.

  Expression property - value for the field on the page with type HeadlinePart.
name: Headlines
uid: O:Codeunit::System#Visualization#Headlines
