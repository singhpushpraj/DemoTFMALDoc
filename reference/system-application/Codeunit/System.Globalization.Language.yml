### YamlMime:BusinessCentralApplicationObject
fqName: System.Globalization.Language
alId: ID 43
namespace: System.Globalization
baseKind: Codeunit
kind: Codeunit
parent: N:Module::System_Application::Namespace::System.Globalization
langs:
- al
seeAlso:
- '[Codeunit](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-codeunit-object)'
objectProperties:
- name: Access
  value: Public
  promoted: false
- name: SingleInstance
  value: "True"
  promoted: false
- name: InherentEntitlements
  value: X
  promoted: false
- name: InherentPermissions
  value: X
  promoted: false
methods:
- syntax:
    content: 'procedure GetUserLanguageCode(): Code[10]'
    return:
      description: The language code of the user's language
      returnType:
        name: Code[10]
        isExternal: true
  summary: >-
    Gets the current user's language code.

    The function emits the <see cref="OnGetUserLanguageCode"></see> event.

    To change the language code returned from this function, subscribe for this event and change the passed language code.
  name: GetUserLanguageCode
  uid: M:Codeunit::System#Globalization#Language.GetUserLanguageCode:Code[10]
- syntax:
    content: 'procedure GetLanguageIdOrDefault(LanguageCode: Code[10]): Integer'
    parameters:
    - id: LanguageCode
      description: The code of the language
      parameterType:
        name: Code[10]
        isExternal: true
    return:
      description: The ID for the language code that was provided for this function. If no ID is found for the language code, then it returns the ID of the current user's language.
      returnType:
        name: Integer
        isExternal: true
  summary: Gets the language ID based on its code. Or defaults to the current user language.
  name: GetLanguageIdOrDefault
  uid: M:Codeunit::System#Globalization#Language.GetLanguageIdOrDefault(Code[10]):Integer
- syntax:
    content: 'procedure GetFormatRegionOrDefault(FormatRegion: Text[80]): Text[80]'
    parameters:
    - id: FormatRegion
      description: The variable for the format region id.
      parameterType:
        name: Text[80]
        isExternal: true
    return:
      description: The ID for the format region that was found.
      returnType:
        name: Text[80]
        isExternal: true
  summary: >-
    Returns format region for a given language. If format region is provided it itself will be returned. If format region is empty the region is taken from UserSessionSettings.

    If no valid tag is found, the default 'en-US' tag is returned.
  name: GetFormatRegionOrDefault
  uid: M:Codeunit::System#Globalization#Language.GetFormatRegionOrDefault(Text[80]):Text[80]
- syntax:
    content: 'procedure GetLanguageId(LanguageCode: Code[10]): Integer'
    parameters:
    - id: LanguageCode
      description: The code of the language
      parameterType:
        name: Code[10]
        isExternal: true
    return:
      description: The ID for the language code that was provided for this function. If no ID is found for the language code, then it returns 0.
      returnType:
        name: Integer
        isExternal: true
  summary: Gets the language ID based on its code.
  name: GetLanguageId
  uid: M:Codeunit::System#Globalization#Language.GetLanguageId(Code[10]):Integer
- syntax:
    content: 'procedure SetOverrideLanguageId(LanguageId: Integer)'
    parameters:
    - id: LanguageId
      description: The ID of the language to use. This must be a valid language ID.
      parameterType:
        name: Integer
        isExternal: true
  summary: Overrides the language ID returned by the GetLanguageIdOrDefault function.
  remarks: "This override will be reset after it's used once in the GetLanguageIdOrDefault function. To keep the override throughout the application, use SetOverrideLanguageId(LanguageId: Integer; ResetOverride: Boolean) method."
  name: SetOverrideLanguageId
  uid: M:Codeunit::System#Globalization#Language.SetOverrideLanguageId(Integer)
- syntax:
    content: 'procedure SetOverrideLanguageId(LanguageId: Integer, ResetOverride: Boolean)'
    parameters:
    - id: LanguageId
      description: The ID of the language to use. This must be a valid language ID.
      parameterType:
        name: Integer
        isExternal: true
    - id: ResetOverride
      description: A boolean value indicating whether the override should be reset after use in the GetLanguageIdOrDefault function. If set to true, the override is reset after it's used once. If set to false, the override remains until it's manually reset or the session is restarted.
      parameterType:
        name: Boolean
        isExternal: true
  summary: Overrides the language ID returned by the GetLanguageIdOrDefault function.
  name: SetOverrideLanguageId
  uid: M:Codeunit::System#Globalization#Language.SetOverrideLanguageId(Integer,Boolean)
- syntax:
    content: 'procedure SetOverrideFormatRegion(FormatRegion: Text[80])'
    parameters:
    - id: FormatRegion
      description: The region to use for formatting purposes. This must be a valid region code.
      parameterType:
        name: Text[80]
        isExternal: true
  summary: Overrides the format region returned by the GetFormatRegionOrDefault function.
  remarks: "This override will be reset after it's used once in the GetFormatRegionOrDefault function. To keep the override throughout the session, use SetOverrideFormatRegion(FormatRegion: Text[80]; ResetOverride: Boolean) method."
  name: SetOverrideFormatRegion
  uid: M:Codeunit::System#Globalization#Language.SetOverrideFormatRegion(Text[80])
- syntax:
    content: 'procedure SetOverrideFormatRegion(FormatRegion: Text[80], ResetOverride: Boolean)'
    parameters:
    - id: FormatRegion
      description: The region to use for formatting purposes. This must be a valid region code.
      parameterType:
        name: Text[80]
        isExternal: true
    - id: ResetOverride
      description: A boolean value indicating whether the override should be reset after use in the GetFormatRegionOrDefault function. If set to true, the override is reset after it's used once. If set to false, the override remains until it's manually reset or the session is restarted.
      parameterType:
        name: Boolean
        isExternal: true
  summary: Overrides the format region returned by the GetFormatRegionOrDefault function.
  name: SetOverrideFormatRegion
  uid: M:Codeunit::System#Globalization#Language.SetOverrideFormatRegion(Text[80],Boolean)
- syntax:
    content: 'procedure GetLanguageCode(LanguageId: Integer): Code[10]'
    parameters:
    - id: LanguageId
      description: The ID of the language.
      parameterType:
        name: Integer
        isExternal: true
    return:
      description: The code of the language that corresponds to the ID, or an empty code if the language with the specified ID does not exist.
      returnType:
        name: Code[10]
        isExternal: true
  summary: Gets the code for a language based on its ID.
  name: GetLanguageCode
  uid: M:Codeunit::System#Globalization#Language.GetLanguageCode(Integer):Code[10]
- syntax:
    content: 'procedure GetWindowsLanguageName(LanguageCode: Code[10]): Text'
    parameters:
    - id: LanguageCode
      description: The code of the language.
      parameterType:
        name: Code[10]
        isExternal: true
    return:
      description: The name of the language corresponding to the code or empty string, if language with the specified code does not exist
      returnType:
        name: Text
        isExternal: true
  summary: Gets the name of a language based on the language code.
  name: GetWindowsLanguageName
  uid: M:Codeunit::System#Globalization#Language.GetWindowsLanguageName(Code[10]):Text
- syntax:
    content: 'procedure GetWindowsLanguageName(LanguageId: Integer): Text'
    parameters:
    - id: LanguageId
      description: The ID of the language.
      parameterType:
        name: Integer
        isExternal: true
    return:
      description: The name of the language that corresponds to the ID, or an empty string if a language with the specified ID does not exist.
      returnType:
        name: Text
        isExternal: true
  summary: Gets the name of a windows language based on its ID.
  name: GetWindowsLanguageName
  uid: M:Codeunit::System#Globalization#Language.GetWindowsLanguageName(Integer):Text
- syntax:
    content: 'procedure GetApplicationLanguages(TempLanguage: __MissingTypeSymbol__)'
    parameters:
    - id: TempLanguage
      parameterType:
        name: __MissingTypeSymbol__
        isExternal: true
  name: GetApplicationLanguages
  uid: M:Codeunit::System#Globalization#Language.GetApplicationLanguages(__MissingSymbol__@)
- syntax:
    content: 'procedure GetDefaultApplicationLanguageId(): Integer'
    return:
      description: The ID of the default language for the application.
      returnType:
        name: Integer
        isExternal: true
  summary: Gets the default application language ID.
  name: GetDefaultApplicationLanguageId
  uid: M:Codeunit::System#Globalization#Language.GetDefaultApplicationLanguageId:Integer
- syntax:
    content: 'procedure ToDefaultLanguage(ValueVariant: Variant): Text'
    parameters:
    - id: ValueVariant
      description: The provided value to be returned in default language.
      parameterType:
        name: Variant
        isExternal: true
    return:
      description: The value in default language.
      returnType:
        name: Text
        isExternal: true
  summary: Formats the provided value in default language.
  name: ToDefaultLanguage
  uid: M:Codeunit::System#Globalization#Language.ToDefaultLanguage(Variant):Text
- syntax:
    content: 'procedure ValidateApplicationLanguageId(LanguageId: Integer)'
    parameters:
    - id: LanguageId
      description: The ID of the language to validate.
      parameterType:
        name: Integer
        isExternal: true
  summary: >-
    Checks whether the provided language is a valid application language.

    If it isn't, the function displays an error.
  name: ValidateApplicationLanguageId
  uid: M:Codeunit::System#Globalization#Language.ValidateApplicationLanguageId(Integer)
- syntax:
    content: 'procedure ValidateWindowsLanguageId(LanguageId: Integer)'
    parameters:
    - id: LanguageId
      description: The ID of the language to validate.
      parameterType:
        name: Integer
        isExternal: true
  summary: Checks whether the provided language exists. If it doesn't, the function displays an error.
  name: ValidateWindowsLanguageId
  uid: M:Codeunit::System#Globalization#Language.ValidateWindowsLanguageId(Integer)
- syntax:
    content: 'procedure LookupApplicationLanguageId(var LanguageId: Integer)'
    parameters:
    - id: LanguageId
      description: Exit parameter that holds the chosen language ID.
      parameterType:
        name: Integer
        isExternal: true
  summary: Opens a list of the languages that are available for the application so that the user can choose a language.
  name: LookupApplicationLanguageId
  uid: M:Codeunit::System#Globalization#Language.LookupApplicationLanguageId(Integer@)
- syntax:
    content: 'procedure LookupWindowsLanguageId(var LanguageId: Integer)'
    parameters:
    - id: LanguageId
      description: Exit parameter that holds the chosen language ID.
      parameterType:
        name: Integer
        isExternal: true
  summary: Opens a list of languages that are available for the Windows version.
  name: LookupWindowsLanguageId
  uid: M:Codeunit::System#Globalization#Language.LookupWindowsLanguageId(Integer@)
- syntax:
    content: 'procedure LookupLanguageCode(var LanguageCode: Code[10])'
    parameters:
    - id: LanguageCode
      description: Exit parameter that holds the chosen language code.
      parameterType:
        name: Code[10]
        isExternal: true
  summary: Opens a list of the languages that are available for the application so that the user can choose a language.
  name: LookupLanguageCode
  uid: M:Codeunit::System#Globalization#Language.LookupLanguageCode(Code[10]@)
- syntax:
    content: 'procedure GetParentLanguageId(LanguageId: Integer): Integer'
    parameters:
    - id: LanguageId
      description: Exit parameter that holds the chosen language ID.
      parameterType:
        name: Integer
        isExternal: true
    return:
      description: The ID of the parent language
      returnType:
        name: Integer
        isExternal: true
  summary: Gets the parent language ID based on Windows Culture Info.
  name: GetParentLanguageId
  uid: M:Codeunit::System#Globalization#Language.GetParentLanguageId(Integer):Integer
- syntax:
    content: 'procedure SetPreferredLanguageID(UserSecID: Guid, NewLanguageID: Integer)'
    parameters:
    - id: UserSecID
      description: The user security ID for the user for whom the preferred language is changed.
      parameterType:
        name: Guid
        isExternal: true
    - id: NewLanguageID
      description: The new preferred language for the user.
      parameterType:
        name: Integer
        isExternal: true
  summary: Sets the preferred language for the provided user.
  name: SetPreferredLanguageID
  uid: M:Codeunit::System#Globalization#Language.SetPreferredLanguageID(Guid,Integer)
- syntax:
    content: 'procedure GetTwoLetterISOLanguageName(LanguageID: Integer): Text[2]'
    parameters:
    - id: LanguageID
      description: The language ID.
      parameterType:
        name: Integer
        isExternal: true
    return:
      description: The two-letter ISO language name. For example, "en" or "es"
      returnType:
        name: Text[2]
        isExternal: true
  summary: Retrieves the two-letter ISO language name for the specified language ID.
  name: GetTwoLetterISOLanguageName
  uid: M:Codeunit::System#Globalization#Language.GetTwoLetterISOLanguageName(Integer):Text[2]
- syntax:
    content: 'procedure GetLanguageIdFromCultureName(CultureName: Text): Integer'
    parameters:
    - id: CultureName
      description: The Culture name.
      parameterType:
        name: Text
        isExternal: true
    return:
      description: The language ID. See https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/a29e5c28-9fb9-4c49-8e43-4b9b8e733a05.
      returnType:
        name: Integer
        isExternal: true
  summary: Retrieves the language ID for the specified culture name.
  examples:
  - >2+

    ``` AL

    Language.GetLanguageIdFromLanguageName('en-US');

    Language.GetLanguageIdFromLanguageName('en');

    ```
  name: GetLanguageIdFromCultureName
  uid: M:Codeunit::System#Globalization#Language.GetLanguageIdFromCultureName(Text):Integer
- syntax:
    content: 'procedure GetCultureName(LanguageID: Integer): Text'
    parameters:
    - id: LanguageID
      description: The language ID. See https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/a29e5c28-9fb9-4c49-8e43-4b9b8e733a05.
      parameterType:
        name: Integer
        isExternal: true
    return:
      description: The culture name. For example, 'en-US'.
      returnType:
        name: Text
        isExternal: true
  summary: Retrieves the culture name for the specified language ID.
  name: GetCultureName
  uid: M:Codeunit::System#Globalization#Language.GetCultureName(Integer):Text
commentId: O:Codeunit::System#Globalization#Language
summary: Management codeunit that exposes various functions to work with languages.
name: Language
uid: O:Codeunit::System#Globalization#Language
