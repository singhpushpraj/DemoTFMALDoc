### YamlMime:BusinessCentralApplicationObject
fqName: System.Security."In Memory Secret Provider"
alId: ID 3802
namespace: System.Security
baseKind: Codeunit
kind: Codeunit
parent: N:Module::System_Application::Namespace::System.Security
langs:
- al
seeAlso:
- '[Codeunit](https://learn.microsoft.com/dynamics365/business-central/dev-itpro/developer/devenv-codeunit-object)'
objectProperties:
- name: Access
  value: Public
  promoted: false
- name: InherentEntitlements
  value: X
  promoted: false
- name: InherentPermissions
  value: X
  promoted: false
methods:
- syntax:
    signatures:
    - '[NonDebuggable]'
    content: 'procedure AddSecret(SecretName: Text, SecretValue: Text)'
    parameters:
    - id: SecretName
      description: The name of the secret.
      parameterType:
        name: Text
        isExternal: true
    - id: SecretValue
      description: The value of the secret.
      parameterType:
        name: Text
        isExternal: true
  summary: Adds a secret to the secret provider. If the secret is already present in the secret provider, its value will be overwritten.
  name: AddSecret
  uid: M:Codeunit::System#Security#In_Memory_Secret_Provider.AddSecret(Text,Text)
- syntax:
    signatures:
    - '[NonDebuggable]'
    content: 'procedure GetSecret(SecretName: Text, var SecretValue: Text): Boolean'
    parameters:
    - id: SecretName
      description: The name of the secret to retrieve.
      parameterType:
        name: Text
        isExternal: true
    - id: SecretValue
      description: The value of the secret, or the empty string if the value could not be retrieved.
      parameterType:
        name: Text
        isExternal: true
    return:
      description: True if the secret value could be retrieved; false otherwise.
      returnType:
        name: Boolean
        isExternal: true
  summary: Retrieves a secret value from the secret provider.
  name: GetSecret
  uid: M:Codeunit::System#Security#In_Memory_Secret_Provider.GetSecret(Text,Text@):Boolean
- syntax:
    signatures:
    - '[NonDebuggable]'
    content: 'procedure GetSecret(SecretName: Text, var SecretValue: SecretText): Boolean'
    parameters:
    - id: SecretName
      description: The name of the secret to retrieve.
      parameterType:
        name: Text
        isExternal: true
    - id: SecretValue
      description: SecretText containing the value of the secret, or the empty string if the value could not be retrieved.
      parameterType:
        name: SecretText
        isExternal: true
    return:
      description: True if the secret value could be retrieved; false otherwise.
      returnType:
        name: Boolean
        isExternal: true
  summary: Retrieves a secret value from the secret provider.
  name: GetSecret
  uid: M:Codeunit::System#Security#In_Memory_Secret_Provider.GetSecret(Text,SecretText@):Boolean
implements:
- internalReference: O:Interface::System#Security#Secret_Provider
  name: System.Security."Secret Provider"
  isExternal: false
- internalReference: O:Interface::System#Security#Secret_Provider_v2
  name: System.Security."Secret Provider v2"
  isExternal: false
commentId: O:Codeunit::System#Security#In Memory Secret Provider
summary: An in-memory secret provider that can be populated with secrets from any source.
name: '"In Memory Secret Provider"'
uid: O:Codeunit::System#Security#In_Memory_Secret_Provider
